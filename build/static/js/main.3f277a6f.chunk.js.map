{"version":3,"sources":["components/javascripts/axios.js","components/javascripts/requests.js","components/javascripts/Banner.js","components/javascripts/Nav.js","components/javascripts/Row.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","src","alt","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","poster_path","id","videoId","opts","height","width","playerVars","autoplay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f277a6f.chunk.js","sourcesContent":["import axios  from \"axios\";\r\n\r\nconst instance=axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\",\r\n})\r\n\r\nexport default instance;","const API_KEY=\"d072fa544eae40d6672bf090dd472577\";\r\n\r\n\r\nconst requests={\r\n    fetchTrending:`/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated:`/movie/top_rated/?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n\r\n}\r\n\r\nexport default requests;","import '../css/banner.css';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport axios from \"./axios\";\r\nimport requests from './requests';\r\n\r\nfunction Banner() {\r\n\r\n    const [movie,setMovie]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        async function fetchData()\r\n        {\r\n            const request=await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length-1)\r\n            ]);\r\n            return request;\r\n\r\n        };\r\n        fetchData();\r\n\r\n    },[]);\r\n\r\n    console.log(movie);\r\n\r\n    function truncate(str,n){\r\n        return str?.length > n ? str.substr(0,n-1) +  '...':str;\r\n    }\r\n\r\n    return (\r\n        <header className=\"banner\"\r\n            style={{\r\n                backgroundSize:\"cover\",\r\n                backgroundImage:`url(\r\n                    \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n                    )`,\r\n                backgroundPosition:\"center center\"\r\n            }}\r\n        >\r\n            <div className=\"banner__contents\">\r\n\r\n                <h1 className=\"banner__title\">    {movie?.title || movie?.name || movie?.original_name} </h1>\r\n                \r\n                <div className=\"banner__buttons\"> \r\n                    <button className=\"banner__button\"> Play </button>\r\n                    <button className=\"banner__button\"> My List </button>\r\n                </div>  \r\n\r\n                <h1 className=\"banner__description\">  {truncate(movie?.overview,150)}</h1>\r\n\r\n            </div>\r\n            <div className=\"banner--fadeBottom\"/>\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner;\r\n","import '../css/Nav.css';\r\n\r\nimport React ,{useEffect, useState} from 'react';\r\n\r\nfunction Nav() {\r\n\r\n    const [show,handleShow]=useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n          if (window.scrollY > 100) {\r\n            handleShow(true);\r\n          } else {\r\n            handleShow(false);\r\n          }\r\n        });\r\n        return () => {\r\n          window.removeEventListener(\"scroll\");\r\n        };\r\n      }, []);\r\n      \r\n    return (\r\n        <div className={`nav ${show && 'nav__black'}`}>\r\n            <img\r\n                className=\"nav__logo\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\r\n                alt=\"Netflix Logo\"\r\n            />     \r\n            <img\r\n                className=\"nav__avatar\"\r\n                src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n                alt=\"Avatar\"\r\n            /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import '../css/Row.css';\r\n\r\nimport React,{useEffect, useState} from 'react';\r\n\r\nimport Youtube from 'react-youtube';\r\nimport axios from './axios';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst base_url=\"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({title,fetchUrl,isLargeRow}) {\r\n\r\n    const [movies,setMovies]=useState([]);\r\n    const [trailerUrl,setTrailerUrl]=useState(\"\");\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n          autoplay: 1,\r\n        },\r\n      };\r\n\r\n    useEffect(()=>{\r\n\r\n        async function fetchData(){\r\n                const request = await axios.get(fetchUrl);\r\n                setMovies(request.data.results)\r\n                return request;\r\n        }\r\n        fetchData();\r\n\r\n    },[fetchUrl]);\r\n\r\n    \r\n\r\n    const handleClick=(movie)=>{\r\n        if(trailerUrl)\r\n            setTrailerUrl('');\r\n        else{\r\n            movieTrailer(movie?.name || \"\")\r\n            .then(url=> {\r\n                const urlParams=new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n            }).catch(error=>console.log(error));\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"row\">\r\n            <h1>{title}</h1>\r\n            <div className=\"row__posters\">\r\n                {movies.map((movie)=>(\r\n                    <img \r\n                      key={movie.id}\r\n                      onClick={()=>handleClick(movie)}\r\n                      className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                      src={`${base_url}${isLargeRow ?movie.poster_path:movie.backdrop_path}`} \r\n                      alt={movie.name}\r\n                    />\r\n                ))}\r\n\r\n            </div>\r\n            {trailerUrl && <Youtube videoId={trailerUrl}  opts={opts}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row;\r\n","import  './App.css';\n\nimport Banner from './components/javascripts/Banner';\nimport Nav from './components/javascripts/Nav';\nimport React from 'react';\nimport Row from './components/javascripts//Row';\nimport requests from './components/javascripts//requests';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <Banner/>\n      <Row title=\"Netflix Originals\" \n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow={true}\n        />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n      \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}